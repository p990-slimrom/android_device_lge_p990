<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2009, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- If this is true, the screen will fade off. -->
    <bool name="config_animateScreenLights">true</bool>

    <!-- The default iface on which to monitor data use -->
    <string name="config_datause_iface">vsnet0</string>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
	 Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">4</integer>

    <!-- Maximum screen brightness allowed by the power manager.
         The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">102</integer>
    
    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">4</integer>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
	 The N entries of this array define N + 1 control points as follows:
	 (1-based arrays)

	 Point 1: (0, value[1]): lux <= 0
	 Point 2: (level[1], value[2]): 0 < lux <= level[1]
	 Point 3: (level[2], value[3]): level[2] < lux <= level[3]
	 ...
	 Point N+1: (level[N], value[N+1]): level[N] < lux

	 The control points must be strictly increasing. Each control point
	 corresponds to an entry in the brightness backlight values arrays.
	 For example, if LUX == level[1] (first element of the levels array)
	 then the brightness will be determined by value[2] (second element
	 of the brightness values array).

	 Spline interpolation is used to determine the auto-brightness
	 backlight values for LUX levels between these control points.

	 Must be overridden in platform specific overlays

	 These are all dummies, but need to be present to enable UI control of auto-brightness
	 The actual control and values are all in-kernel -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>5</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
	 in the config_autoBrightnessLevels array. This array should have size one greater
	 than the size of the config_autoBrightnessLevels array.
	 The brightness values must be between 0 and 255 and be non-decreasing.
	 This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>25</item>
        <item>55</item>
        <item>70</item>
    </integer-array>

    <!-- Array of output values for button backlight corresponding to the LUX values
	 in the config_autoBrightnessLevels array. This array should have size one greater
	 than the size of the config_autoBrightnessLevels array.
	 The brightness values must be between 0 and 255 and be non-decreasing.
	 This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>255</item>
        <item>255</item>
        <item>0</item>
    </integer-array>

    <!-- Array of output values for keyboard backlight corresponding to the LUX values
	 in the config_autoBrightnessLevels array. This array should have size one greater
	 than the size of the config_autoBrightnessLevels array.
	 The brightness values must be between 0 and 255 and be non-decreasing.
	 This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessKeyboardBacklightValues">
        <item>255</item>
        <item>255</item>
        <item>0</item>
    </integer-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
	 USB interfaces. If the device doesn't want to support tething over USB this should
	 be empty. An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
    <item>"rndis0"</item>
    </string-array>

    <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
     <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
	 Wifi interfaces. If the device doesn't want to support tethering over Wifi this
	 should be empty. An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bnep\\d"</item>
    </string-array>

    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
                  [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
                  before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1,-1,true"</item>
        <item>"mobile,0,0,0,-1,true"</item>
        <item>"mobile_mms,2,0,2,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"mobile_bluetooth,7,7,1,-1,true"</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
	 attributes. This is used by the connectivity manager to decide which networks can coexist
	 based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
	 [# simultaneous connection types]" -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"2,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">15</integer>

    <!-- Vibrator pattern to be used as the default for notifications
	 that specify DEFAULT_VIBRATE.
    -->
    <integer-array name="config_defaultNotificationVibePattern">
        <item>0</item>
        <item>250</item>
        <item>150</item>
        <item>250</item>
    </integer-array>

</resources>
